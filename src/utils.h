/*-------------------------------------------------------------------------------------------------/
 *  Utils functions interface for a C- Compiler
 *  File: utils.h
 *---------------------------------*/

#ifndef UTILS_H
#define UTILS_H

#include "globals.h"

/*--------------------------------------------/
 *  Indentation and Design functions
 *---------------------------------*/
 
void newLine(void);

void printBars(void);

/*--------------------------------------------/
 *  Utility functions
 *---------------------------------*/

/*  inputSelect() → Searches for the input folder provided and lists the files, allowing you to select one to use   */
void inputSelect(void);

/*  tokenToString() → Transforms a numeric token into a string token based on the table generated by the parser (YACC-Bison)   */
const char *tokenToString(int token);

/*  expTokenToString() → Transforms a Expression Type enum into a string refered to that expression type   */
const char *expTypeToString(ExpType expType);

/*  declKindToString() → Transforms a Declaration Kind enum into a string refered to that declaration type   */
const char *declKindToString(DeclKind declKind);

/*--------------------------------------------/
 *  Abstract Syntax Tree (AST) functions
 *---------------------------------*/

TreeNode *newDeclNode(DeclKind kind);

TreeNode *newStmtNode(StmtKind kind);

TreeNode *newExpNode(ExpKind kind);

TreeNode *addSibling(TreeNode *t, TreeNode *sibling);

void insertScope(TreeNode *tree, char *scope);

void printTree(TreeNode *t);

#endif